apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'

def abi = System.getenv('GRADLE_ABI')?.toLowerCase()
def vlcSrcDirs = System.getenv('GRADLE_VLC_SRC_DIRS')
ext {
    library_version = "3.3.0-eap17"
    repoName = 'Android'
    libraryName = 'LibVLC-Android'
    lib_artifact = "libvlc-$abi"

    libraryDescription = 'Android bindings and API for VLC'
}
android {

    defaultConfig {
        compileSdkVersion 29
        targetSdkVersion 29
        minSdkVersion 17
        resValue "string", "build_vlc_revision", vlcRevision()
    }

    sourceSets {
        main {
            jni.srcDirs = [] // Prevent gradle from building native code with ndk; we have our own Makefile for it.
            //jniLibs.srcDirs = [ 'jni/libs' ]
            //jniLibs.srcDirs += "$vlcSrcDirs"
            jniLibs.srcDirs = ['jni']
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets' ]
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        dev {
            initWith debug
            matchingFallbacks = ['debug']
        }
    }

    // Make per-variant version code
    libraryVariants.all { variant ->
        //Custom APK name
        variant.outputs.each { output ->
            if (output.outputFileName != null && output.outputFileName.endsWith('.aar')) {
                output.outputFileName = "libvlc-${abi}-${library_version}.aar"
            }
        }
    }
}

clean {
    delete 'build', 'jni/libs', 'jni/obj'
}

dependencies {
    api "androidx.annotation:annotation:1.1.0"
    api "androidx.legacy:legacy-support-v4:1.0.0"
}

def vlcRevision() {
    def vlc = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = vlc
    }
    return vlc.toString()
}

ext {
    appId = "org.videolan.vlc"
    versionName = '3.3.0 RC 4'
    versionCode = 3029300
    libvlcVersion = '3.3.0-eap17'
    medialibraryVersion = '0.7.0-eap17'
    minSdkVersion = 17
    targetSdkVersion = 29
    compileSdkVersion = 29
    androidxLegacyVersion = '1.0.0'
    androidxCoreVersion = '1.3.0'
    lifecycleVersion = '2.2.0'
    androidxPreferencesVersion = '1.1.1'
    androidxVersion = '1.1.0'
    androidxActivityVersion = '1.1.0'
    androidxFragmentVersion = '1.2.4'
    androidxAnnotationVersion = '1.1.0'
    androidxAppcompatVersion = '1.1.0'
    androidxRecyclerviewVersion = '1.1.0'
    androidxMediaVersion = '1.1.0'
    androidxLeanbackVersion = '1.0.0'
    //fixme : When we update this dep, please verify of this issue is fixed: https://github.com/material-components/material-components-android/issues/1086
    // if so, revert application/vlc-android/res/values[-v21]/styles.xml -> AppModalStyle
    androidxMaterialVersion = '1.1.0'
    constraintLayoutVersion = '1.1.3'
    archVersion = '2.1.0'
    roomVersion = '2.2.5'
    pagingVersion = '2.1.2'
    junitVersion = '4.12'
    mockito = '2.8.9'
    retrofit = '2.6.1'
    moshi = '1.8.0'
    powerMock = '2.0.2'
    espressoVersion = '3.1.1'
    livedataTest = '1.1.0'
    robolectric = '4.3.1'
    mockk = '1.9.3'
    supportTest = '1.1.0'
//    versionCode scheme is T M NN RR AA
//    T: Target/Flavour (1 for Android, 2 for Chrome?)
//    M: Major version from 0 to 9
//    NN: Minor version from 00 to 99
//    RR: Micro/Revision version from 00 to 99
//    AA: ABI from 0 to 99
//    0 is dev
//    1 was ARMv5        (deprecated)
//    2 was ARMv6-nofpu  (deprecated)
//    3 was ARMv6-fpu    (deprecated)
//    4 is ARMv7-A
//    5 is x86
//    6 is MIPS
//    7 is ARMv8
//    8 is x86_64
//    9 is MIPS64
}

//apply from: '../buildsystem/publish.gradle'
